control=glmerControl(optimizer="bobyqa"),
performance ~ 1 + (1|id) + (1|sequence) + cond*counter)
summary(mm_simple_late)
mm_simple_late <- glmer(data=data_outs[window>5],
family=binomial,
control=glmerControl(optimizer="bobyqa"),
performance ~ 1 + (1|id) + (1|sequence) + cond*counter)
summary(mm_simple_late)
mm_full_late <- glmer(data=data_outs[window>5],
family=binomial,
control=glmerControl(optimizer="bobyqa"),
performance ~ 1 + (1|id) + (1|sequence) +
seq.length + inter + cond*counter)
summary(mm_full_late)
anova(mm_full_late, mm_simple_late)
data_outs
ma <- function(x,n=5){filter(x,rep(1/n,n), sides=1)}
?filter
filter(1:10, rep(1,3), sides=1)
ma(1:10, 3)
ma(1:10, 2)
ma(1:10, 4)
data_ma <- data_outs[,mov.avg=ma(performance, 33), by=id]
data_ma <- data_outs[,list(mov.avg=ma(performance, 33)), by=id]
data_ma
head(data_ma, 50)
data_ma <- data_outs[,list(n, mov.avg=ma(performance, 33)), by=id]
head(data_ma, 50)
data_ma <- data_outs[,list(n-32, mov.avg=ma(performance, 33)), by=id]
head(data_ma, 50)
data_ma <- data_outs[,list(cond, counter, n-32, mov.avg=ma(performance, 33)), by=id]
head(data_ma, 50)
data_ma <- data_outs[,list(cond, counter, n-32, mov.avg=ma(performance, 33)),
by=id, nomatch=0]
head(data_ma, 50)
data_ma <- data_outs[,list(cond, counter, n=n-32, mov.avg=ma(performance, 33)),
by=id, nomatch=0]
head(data_ma, 50)
data_ma <- na.omit(data_outs[,list(cond, counter, n=n-32, mov.avg=ma(performance, 33)),
by=id, nomatch=0])
head(data_ma, 50)
head(data_ma, 100)
data_ma_tmp <- data_outs[,list(agg.perf=sum(performance)),
by=c("cond", "counter", "n")]
head(data_ma_tmp)
data_ma_tmp[140:180]
data_ma <- na.omit(data_ma_tmp[,list(n=n-32, mov.avg=ma(agg.perf, 33)),
by=c("cond", "counter")])
head(data_ma)
data_ma[110:150]
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond, linetype=counter, group=cond:counter)) +
geom_point() +
geom_line() +
theme_bw()
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond, linetype=counter, group=cond:counter)) +
geom_point() +
geom_line() +
geom_smooth() +
theme_bw()
?geom_point
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond, linetype=counter, group=cond:counter)) +
geom_point(aes(alpha=0.3)) +
geom_line() +
geom_smooth() +
theme_bw()
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond, linetype=counter, group=cond:counter)) +
geom_point(aes(alpha=0.1)) +
geom_line(aes(alpha=0.1)) +
geom_smooth() +
theme_bw()
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond, linetype=counter, group=cond:counter)) +
geom_point(aes(alpha=0.05)) +
geom_line(aes(alpha=0.05)) +
geom_smooth() +
theme_bw()
?geom_smooth
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond, linetype=counter, group=cond:counter)) +
geom_point(aes(alpha=0.05)) +
geom_line(aes(alpha=0.05)) +
geom_smooth(aes(size=10)) +
theme_bw()
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond, linetype=counter, group=cond:counter)) +
geom_point(aes(alpha=0.05)) +
geom_line(aes(alpha=0.05)) +
geom_smooth(aes(size=5)) +
theme_bw()
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond, linetype=counter, group=cond:counter)) +
geom_point(aes(alpha=0.05)) +
geom_line(aes(alpha=0.05)) +
geom_smooth(aes(size=2)) +
theme_bw()
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond, linetype=counter, group=cond:counter)) +
geom_point(aes(alpha=0.05)) +
geom_line(aes(alpha=0.05)) +
geom_smooth(aes(size=20)) +
theme_bw()
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond, linetype=counter, group=cond:counter)) +
geom_point(aes(alpha=0.05)) +
geom_line(aes(alpha=0.05)) +
geom_smooth(aes(size=1.2)) +
theme_bw()
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond, linetype=counter, group=cond:counter)) +
geom_point(aes(alpha=0.05)) +
geom_line(aes(alpha=0.05)) +
geom_smooth(size=10) +
theme_bw()
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond, linetype=counter, group=cond:counter)) +
geom_point(aes(alpha=0.05)) +
geom_line(aes(alpha=0.05)) +
geom_smooth(size=1) +
theme_bw()
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond, linetype=counter, group=cond:counter)) +
geom_point(aes(alpha=0.05)) +
geom_line(aes(alpha=0.05)) +
geom_smooth(size=2) +
theme_bw()
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond, linetype=counter, group=cond:counter)) +
geom_point(aes(alpha=0.01)) +
geom_line(aes(alpha=0.01)) +
geom_smooth(size=2) +
theme_bw()
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond, linetype=counter, group=cond:counter)) +
geom_point(aes(alpha=0.01)) +
geom_line(aes(alpha=0.01)) +
geom_smooth(size=1.5) +
theme_bw()
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond, linetype=counter, group=cond:counter)) +
geom_point(alpha=0.01) +
geom_line(alpha=0.01) +
geom_smooth(size=1.5) +
theme_bw()
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond, linetype=counter, group=cond:counter)) +
geom_point(alpha=0.1) +
geom_line(alpha=0.1) +
geom_smooth(size=1.5) +
theme_bw()
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond, linetype=counter, group=cond:counter)) +
geom_point(alpha=0.3) +
geom_line(alpha=0.3) +
geom_smooth(size=1.5) +
theme_bw()
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond, linetype=counter, group=cond:counter)) +
geom_point(alpha=0.3) +
geom_line(alpha=0.3) +
geom_smooth(size=1.5) +
scale_color_discrete("Line") +
scale_linetype_discrete("Line") +
theme_bw()
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond, linetype=counter, group=cond:counter)) +
geom_point(alpha=0.3) +
geom_line(alpha=0.3) +
geom_smooth(size=1.5) +
theme_bw()
data_ma_tmp
data_ma <- na.omit(data_ma_tmp[,list(n, mov.avg=ma(agg.perf, 33)/33),
by=c("cond", "counter")])
data_ma_tmp <- data_outs[,list(agg.perf=sum(performance)),
by=c("cond", "counter", "n")]
data_ma <- na.omit(data_ma_tmp[,list(n, mov.avg=100*ma(agg.perf, 33)/33),
by=c("cond", "counter")])
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond, linetype=counter, group=cond:counter)) +
geom_point(alpha=0.3) +
geom_line(alpha=0.3) +
geom_smooth(size=1.5) +
theme_bw() +
scale_color_discrete(name="Grammar",
breaks=c("fsa", "cfg"),
labels=c("FSA", "CFG")) +
scale_linetype_discrete(name="Prediction Length",
breaks=c("one", "three"),
labels=c("1", "3"))
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond, linetype=counter, group=cond:counter)) +
geom_point(alpha=0.3) +
geom_line(alpha=0.3) +
geom_smooth(size=1.5) +
theme_bw() +
scale_color_discrete(name="Grammar",
breaks=c("fsa", "cfg"),
labels=c("FSA", "CFG")) +
scale_linetype_discrete(name="Prediction Length",
breaks=c("one", "three"),
labels=c("1", "3")) +
xlab("Trial Number") +
ylab("Avg. Accuracy Across 33 Previous Trials")
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond, linetype=counter, group=cond:counter)) +
geom_point(alpha=0.3) +
geom_line(alpha=0.3) +
geom_smooth(size=1.5) +
theme_bw() +
scale_color_discrete(name="Grammar",
breaks=c("fsa", "cfg"),
labels=c("FSA", "CFG")) +
scale_linetype_discrete(name="Prediction Length",
breaks=c("one", "three"),
labels=c("1", "3")) +
xlab("Trial Number") +
ylab("Avg. Accuracy Across 33 Previous Trials")
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond,
linetype=counter, group=cond:counter)) +
geom_point(alpha=0.3) +
geom_line(alpha=0.3) +
geom_smooth(size=1) +
theme_bw() +
scale_color_discrete(name="Grammar",
breaks=c("fsa", "cfg"),
labels=c("FSA", "CFG")) +
scale_linetype_discrete(name="Prediction Length",
breaks=c("one", "three"),
labels=c("1", "3")) +
xlab("Trial Number") +
ylab("Avg. Accuracy Across 33 Previous Trials")
data_ma_tmp <- data_outs[,list(agg.perf=sum(performance)),
by=c("cond", "counter", "n")]
View(data_ma_tmp)
dcast(data_ma_tmp, cond ~ counter)
accuracies_outs
dcast(accuracies_outs, cond ~ counter)
data_ma_tmp <- data_outs[,list(agg.perf=sum(performance)),
by=c("cond", "counter", "n")]
data_ma <- na.omit(data_ma_tmp[,list(n, mov.avg=100*ma(agg.perf, 33)/30),
by=c("cond", "counter")])
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond,
linetype=counter, group=cond:counter)) +
geom_point(alpha=0.3) +
geom_line(alpha=0.3) +
geom_smooth(size=1) +
theme_bw() +
scale_color_discrete(name="Grammar",
breaks=c("fsa", "cfg"),
labels=c("FSA", "CFG")) +
scale_linetype_discrete(name="Prediction Length",
breaks=c("one", "three"),
labels=c("1", "3")) +
xlab("Trial Number") +
ylab("Avg. Accuracy Across 33 Previous Trials")
toString("thing")
1:4 / 4:1
data_ma$mov.avg <- data_ma$mov.avg / gram_converter(data_ma$cond)
gram_converter <- function(gram) {
switch(toString(gram),
"fsa" = 29
"cfg" = 30)
}
gram_converter <- function(gram) {
switch(toString(gram),
"fsa" = 29,
"cfg" = 30)
}
gram_converter("cfg")
gram_converter("fsa")
data_ma$mov.avg <- data_ma$mov.avg / gram_converter(data_ma$cond)
str(data_ma)
head(gram_converter(data_ma$cond))
head(data_ma$cond)
gram_converter <- Vectorize(function(gram) {
switch(toString(gram),
"fsa" = 29,
"cfg" = 30)
})
gram_converter(c("fsa", "cfg", "fsa"))
str(gram_converter(c("fsa", "cfg", "fsa")))
head(gram_converter(data_ma$cond))
data_ma$mov.avg <- data_ma$mov.avg / gram_converter(data_ma$cond)
View(ma)
str(ma)
print(ma)
?filter
as.numeric(filter(1:10, rep(1,3), sides=1))
str(as.numeric(filter(1:10, rep(1,3), sides=1)))
str(filter(1:10, rep(1,3), sides=1))
ma <- function(x,n) { filter(x, rep(1/n,n), sides=1) }
ma <- function(x,n) { as.numeric(filter(x, rep(1/n,n), sides=1)) }
data_ma_tmp <- data_outs[,list(agg.perf=sum(performance)),
by=c("cond", "counter", "n")]
data_ma <- na.omit(data_ma_tmp[,list(n, mov.avg=ma(agg.perf, 33)),
by=c("cond", "counter")])
data_ma$mov.avg <- data_ma$mov.avg / gram_converter(data_ma$cond)
data_ma
ma <- function(x,n) { as.numeric(filter(x, rep(1/n,n), sides=1)) }
data_ma_tmp <- data_outs[,list(agg.perf=sum(performance)),
by=c("cond", "counter", "n")]
data_ma <- na.omit(data_ma_tmp[,list(n, mov.avg=ma(agg.perf, 33)),
by=c("cond", "counter")])
data_ma$mov.avg <- 100 * data_ma$mov.avg / gram_converter(data_ma$cond)
data_ma
ggplot(data_ma, aes(x=n, y=mov.avg, color=cond,
linetype=counter, group=cond:counter)) +
geom_point(alpha=0.3) +
geom_line(alpha=0.3) +
geom_smooth(size=1) +
theme_bw() +
scale_color_discrete(name="Grammar",
breaks=c("fsa", "cfg"),
labels=c("FSA", "CFG")) +
scale_linetype_discrete(name="Prediction Length",
breaks=c("one", "three"),
labels=c("1", "3")) +
xlab("Trial Number") +
ylab("Avg. Accuracy Across 33 Previous Trials")
stripchart(acc ~ counter + cond,
vertical=TRUE,
data=late_accuracies_outs,
method="stack", jitter=0.1,
at=c(1.33,2,3.33,4),
col=rgb(0,0,1,0.4), pch=16,
ylab="% Correct", xlab="Language x Prediction Window",
group.names=c("FSA1", "FSA3", "CFG1", "CFG3"))
late_means <- c(mean(late_accuracies_outs[cond=="fsa"][counter=="one"]$acc),
mean(late_accuracies_outs[cond=="fsa"][counter=="three"]$acc),
mean(late_accuracies_outs[cond=="cfg"][counter=="one"]$acc),
mean(late_accuracies_outs[cond=="cfg"][counter=="three"]$acc))
# points(c(1,2,3,4), overall_means, pch=18, cex=1.5, lwd=2)
segments(c(1.33,2,3.33,4)-0.05, late_means, c(1.33,2,3.33,4)+0.1, late_means, lwd=4)
text(c(1.1,2.4,3.1,4.3), late_means, labels=round(late_means,1), cex=0.8)
stripchart(acc ~ counter + cond,
vertical=TRUE,
data=late_accuracies_outs,
method="stack", jitter=0.1,
at=c(1.33,2,3.33,4),
col=rgb(0,0,1,0.4), pch=16,
ylab="% Correct", xlab="Language x Prediction Window",
group.names=c("FSA1", "FSA3", "CFG1", "CFG3"))
late_means <- c(mean(late_accuracies_outs[cond=="fsa"][counter=="one"]$acc),
mean(late_accuracies_outs[cond=="fsa"][counter=="three"]$acc),
mean(late_accuracies_outs[cond=="cfg"][counter=="one"]$acc),
mean(late_accuracies_outs[cond=="cfg"][counter=="three"]$acc))
# points(c(1,2,3,4), overall_means, pch=18, cex=1.5, lwd=2)
segments(c(1.33,2,3.33,4)-0.05, late_means, c(1.33,2,3.33,4)+0.1, late_means, lwd=4)
text(c(1.1,2.4,3.1,4.3), late_means, labels=round(late_means,1), cex=0.8)
stripchart(acc ~ counter + cond,
vertical=TRUE,
data=late_accuracies_outs,
method="stack", jitter=0.1,
at=c(1.33,2,3.33,4),
col=rgb(0,0,1,0.4), pch=16,
ylab="% Correct", xlab="Language x Prediction Window",
group.names=c("FSA1", "FSA3", "CFG1", "CFG3"))
late_means <- c(mean(late_accuracies_outs[cond=="fsa"][counter=="one"]$acc),
mean(late_accuracies_outs[cond=="fsa"][counter=="three"]$acc),
mean(late_accuracies_outs[cond=="cfg"][counter=="one"]$acc),
mean(late_accuracies_outs[cond=="cfg"][counter=="three"]$acc))
# points(c(1,2,3,4), overall_means, pch=18, cex=1.5, lwd=2)
segments(c(1.33,2,3.33,4)-0.05, late_means, c(1.33,2,3.33,4)+0.1, late_means, lwd=4)
text(c(1.1,2.3,3.1,4.3), late_means, labels=round(late_means,1), cex=0.8)
mm_simple_overall <- glmer(data=data_outs,
family=binomial,
control=glmerControl(optimizer="bobyqa"),
performance ~ 1 + (1|id) + (1|sequence) + stage + cond*counter)
summary(mm_simple_overall)
mmm_simple_overall <- glmer(data=data_outs,
family=binomial,
control=glmerControl(optimizer="bobyqa"),
performance ~ 1 + (1|id) + (1|sequence) + cond*counter*stage)
summary(mmm_simple_overall)
key(data_outs)
?setkey
setkey(data_outs, c("id", "cond", "counter"))
data_outs
setkey(data_outs, c(id, cond, counter))
setkeyv(data_outs, c("id", "cond", "counter"))
setkeyv(data_outs, c("cond", "counter"))
data_outs[CJ("cfg", c("one", "three"))]
data_outs[CJ("cfg", c("one", "three")), list(acc=performance/.N), by=counter]
data_outs[CJ("cfg", c("one", "three"))][, list(acc=performance/.N), by=counter]
data_outs[CJ("cfg", c("one", "three")), list(counter, acc=sum(performance)/.N), by=c("id")]
data_outs[CJ("cfg", c("one", "three")), list(counter, acc=sum(performance)/.N), by=c("id"), mult="first"]
setkeyv(data_outs, c("cond", "counter", "n"))
data_outs[CJ("cfg", c("one", "three"), 132:165), list(counter, acc=sum(performance)/.N), by=c("id")]
data_outs[CJ("cfg", c("one", "three"), 132:165), list(n, counter, acc=sum(performance)/.N), by=c("id")]
data_outs[CJ("cfg", c("one", "three"), 132:165), list(n, counter)]
data_outs[CJ("cfg", c("one", "three"), 132:165), list(performance)]
data_outs[CJ("cfg", c("one", "three"), 132:165), list(acc=sum(performance)/.N, by=id]
data_outs[CJ("cfg", c("one", "three"), 132:165), list(acc=sum(performance)/.N), by=id]
data_outs[CJ("cfg", c("one", "three"), 132:165), list(counter, acc=sum(performance)/.N), by=id]
data_outs[CJ("cfg", c("one", "three"), 132:165), list(counter, acc=sum(performance)/.N), by=id, mult="first"]
data_outs[CJ("cfg", c("one", "three"), 132:165), list(acc=sum(performance)/.N), by=id]
data_outs[data_outs[CJ("cfg", c("one", "three"), 132:165),
list(acc=sum(performance)/.N), by=id], mult="first"]
data_outs
key(data_outs)
setkeyv(data_outs, c("cond", "counter", "n"))
ttmp <- data_outs[CJ("cfg", c("one", "three"), 132:165),
list(acc=sum(performance)/.N), by=id]
setkey(data_outs, id)
data_outs[ttmp, mult="first"]
setkeyv(data_outs, c("cond", "counter", "n"))
ttmp <- data_outs[CJ("cfg", c("one", "three"), 132:165),
list(acc=sum(performance)/.N), by=id]
setkey(data_outs, id)
setkey(ttmp, id)
data_outs[ttmp, mult="first"]
ttmp
data_outs[ttmp, mult="first"][,!trial_vars, with=F]
data_outs[ttmp, mult="first"][,!c(trial_vars, stage, stage4), with=F]
data_outs[ttmp, mult="first"][,!c(trial_vars, "stage", "stage4"), with=F]
t_accs <- data_outs[ttmp, mult="first"][,!c(trial_vars, "stage", "stage4"), with=F]
dcast(t_accs, cond ~ counter)
?t.test
t.test(t_accs[counter=="one"]$acc, t_accs[counter=="three"]$acc)
t_accs[counter=="one"]
t_accs[counter=="one"]$acc
setkeyv(data_outs, c("cond", "counter", "n"))
data_outs[J(c("cfg", "fsa"), c("three", "one"), 132:165]
data_outs[J(c("cfg", "fsa"), c("three", "one"), 132:165)]
setkeyv(data_outs, c("cond", "counter", "n"))
ttmp <- data_outs[J(c("cfg", "fsa"), c("three", "one"), 132:165),
list(acc=sum(performance)/.N), by=id]
setkey(data_outs, id)
setkey(ttmp, id)
t_accs <- data_outs[ttmp, mult="first"][,!c(trial_vars, "stage", "stage4"), with=F]
setkeyv(data_outs, c("cond", "counter", "n"))
ttmp <- data_outs[J(c("cfg", "fsa"), c("three", "one"), 132:165),
list(acc=sum(performance)/.N), by=id]
setkey(data_outs, id)
setkey(ttmp, id)
setkeyv(data_outs, c("cond", "counter", "n"))
ttmp1 <- data_outs[CJ("cfg", c("one", "three"), 132:165),
list(acc=sum(performance)/.N), by=id]
setkey(data_outs, id)
setkey(ttmp1, id)
t_accs1 <- data_outs[ttmp1, mult="first"][,!c(trial_vars, "stage", "stage4"), with=F]
setkeyv(data_outs, c("cond", "counter", "n"))
ttmp2 <- data_outs[J(c("cfg", "fsa"), c("three", "one"), 132:165),
list(acc=sum(performance)/.N), by=id]
setkey(data_outs, id)
setkey(ttmp2, id)
t_accs2 <- data_outs[ttmp2, mult="first"][,!c(trial_vars, "stage", "stage4"), with=F]
library(data.table)
setkeyv(data_outs, c("cond", "counter", "n"))
ttmp1 <- data_outs[CJ("cfg", c("one", "three"), 132:165),
list(acc=sum(performance)/.N), by=id]
setkey(data_outs, id)
setkey(ttmp1, id)
t_accs1 <- data_outs[ttmp1, mult="first"][,!c(trial_vars, "stage", "stage4"), with=F]
setkeyv(data_outs, c("cond", "counter", "n"))
ttmp2 <- data_outs[J(c("cfg", "fsa"), c("three", "one"), 132:165),
list(acc=sum(performance)/.N), by=id]
setkey(data_outs, id)
setkey(ttmp2, id)
t_accs2 <- data_outs[ttmp2, mult="first"][,!c(trial_vars, "stage", "stage4"), with=F]
library(devtools)
library("devtools")
install.packages("devtools")
library("devtools")
reload(inst("data.table"))
setkeyv(data_outs, c("cond", "counter", "n"))
ttmp1 <- data_outs[CJ("cfg", c("one", "three"), 132:165),
list(acc=sum(performance)/.N), by=id]
setkey(data_outs, id)
setkey(ttmp1, id)
t_accs1 <- data_outs[ttmp1, mult="first"][,!c(trial_vars, "stage", "stage4"), with=F]
setkeyv(data_outs, c("cond", "counter", "n"))
ttmp2 <- data_outs[J(c("cfg", "fsa"), c("three", "one"), 132:165),
list(acc=sum(performance)/.N), by=id]
setkey(data_outs, id)
setkey(ttmp2, id)
t_accs2 <- data_outs[ttmp2, mult="first"][,!c(trial_vars, "stage", "stage4"), with=F]
t_accs2
t.test(t_accs1[counter=="one"]$accs, t_accs1[counter=="three"]$accs)
t.test(t_accs1[counter=="one"]$acc, t_accs1[counter=="three"]$acc)
t.test(t_accs2[cond=="fsa"]$acc, t_accs2[cond=="cfg"]$acc)
setkeyv(data_outs, c("cond", "counter", "n"))
ttmp1 <- data_outs[CJ("cfg", c("one", "three"), 100:165),
list(acc=sum(performance)/.N), by=id]
setkey(data_outs, id)
setkey(ttmp1, id)
t_accs1 <- data_outs[ttmp1, mult="first"][,!c(trial_vars, "stage", "stage4"), with=F]
setkeyv(data_outs, c("cond", "counter", "n"))
ttmp2 <- data_outs[J(c("cfg", "fsa"), c("three", "one"), 100:165),
list(acc=sum(performance)/.N), by=id]
setkey(data_outs, id)
setkey(ttmp2, id)
t_accs2 <- data_outs[ttmp2, mult="first"][,!c(trial_vars, "stage", "stage4"), with=F]
t.test(t_accs1[counter=="one"]$acc, t_accs1[counter=="three"]$acc)
t.test(t_accs2[cond=="fsa"]$acc, t_accs2[cond=="cfg"]$acc)
kety(data_outs)
key(data_outs)
mm_simple_threes <- glmer(data=data_outs[counter=="three"],
family=binomial,
control=glmerControl(optimizer="bobyqa"),
performance ~ 1 (1|id) + (1|sequence) + cond*stage)
mm_simple_threes <- glmer(data=data_outs[counter=="three"],
family=binomial,
control=glmerControl(optimizer="bobyqa"),
performance ~ 1 + (1|id) + (1|sequence) + cond*stage)
summary(mm_simple_threes)
mm_simple_threes <- glmer(data=data_outs[counter=="three"],
family=binomial,
control=glmerControl(optimizer="bobyqa"),
performance ~ 1 + (1|id) + (1|sequence) + cond*stage4)
summary(mm_simple_threes)
mm_simple_threes <- glmer(data=data_outs[counter=="three"][stage>1],
family=binomial,
control=glmerControl(optimizer="bobyqa"),
performance ~ 1 + (1|id) + (1|sequence) + cond*stage4)
summary(mm_simple_threes)
mm_simple_threes <- glmer(data=data_outs[counter=="three"][stage>1],
family=binomial,
control=glmerControl(optimizer="bobyqa"),
performance ~ 1 + (1|id) + (1|sequence) + cond*stage)
summary(mm_simple_threes)
data_outs[counter=="three"]
mm_simple_threes <- glmer(data=data_outs[counter=="three"],
family=binomial,
control=glmerControl(optimizer="bobyqa"),
performance ~ 1 + (1|id) + (1|sequence) + cond*window)
summary(mm_simple_threes)
mm_simple_threes <- glmer(data=data_outs[counter=="three"],
family=binomial,
control=glmerControl(optimizer="bobyqa"),
performance ~ 1 + (1|id) + (1|sequence) + cond*n)
summary(mm_simple_threes)
